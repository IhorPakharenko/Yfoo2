plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'de.mannodermaus.android-junit5'
}

android {
    namespace 'com.isao.yfoo2'
    compileSdk 34

    defaultConfig {
        applicationId "com.isao.yfoo2"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    applicationVariants.configureEach { variant ->
        variant.addJavaSourceFoldersToModel(file("build/generated/ksp/${variant.name}/kotlin"))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //TODO create a release signing config when releasing
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        //TODO see https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compiler.html#migrating-a-jetpack-compose-project
        // for the new way of accessing compose config
//        kotlinCompilerExtensionVersion = "1.5.14"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }
    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
        unitTests.all {
            it.useJUnitPlatform()
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }
}

afterEvaluate {
    tasks.compileReleaseKotlin {
        kotlinOptions {
            freeCompilerArgs += [
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                            project.buildDir.absolutePath + "/compose_metrics",
                    "-P",
                    "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                            project.buildDir.absolutePath + "/compose_reports"
            ]
        }
    }
    tasks.compileDebugKotlin {
        kotlinOptions {
            freeCompilerArgs += [
                    "-Xdebug"
            ]
        }
    }
}

ksp {
    arg("room.schemaLocation", "$projectDir/schemas")
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.8.4'
    implementation 'androidx.activity:activity-compose:1.9.1'
    implementation "androidx.compose.ui:ui:1.6.8"
    implementation "androidx.compose.animation:animation:1.6.8"
    implementation "androidx.compose.ui:ui-tooling-preview:1.6.8"
    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7"
    implementation "io.coil-kt:coil-compose:2.6.0"
    implementation "androidx.compose.material:material-icons-extended:1.6.8"
    implementation "com.jakewharton.timber:timber:5.0.1"
    def roomVersion = "2.6.1"
    implementation "androidx.room:room-runtime:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
    implementation "androidx.room:room-ktx:2.6.1"
    implementation "androidx.navigation:navigation-compose:2.7.7"
    def accompanistVersion = "0.30.1"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompanistVersion"
    implementation "androidx.compose.material:material:1.6.8"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    lintChecks("com.slack.lint.compose:compose-lint-checks:1.3.1")
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.6.8"
    debugImplementation "androidx.compose.ui:ui-tooling:1.6.8"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.6.8"

    implementation(platform("io.insert-koin:koin-bom:3.5.6"))
    implementation("io.insert-koin:koin-core")
    implementation("io.insert-koin:koin-core-coroutines")
    // Koin Test features
    testImplementation("io.insert-koin:koin-test")
    // Koin for JUnit 5
    testImplementation("io.insert-koin:koin-test-junit5")
    implementation("io.insert-koin:koin-android")
    implementation("io.insert-koin:koin-compose-viewmodel:1.2.0-Beta5")
    implementation("io.insert-koin:koin-androidx-compose")
    implementation("io.insert-koin:koin-androidx-compose-navigation")
    implementation(platform("io.insert-koin:koin-annotations-bom:1.4.0-RC2"))
    implementation "io.insert-koin:koin-annotations"
    ksp "io.insert-koin:koin-ksp-compiler:1.4.0-RC2" //TODO Why does not it work with BOM?


    // spek
    def spek_version = "2.0.19"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:2.0.0"

    def kotest_version = "5.9.1"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-framework-datatest:$kotest_version"
    testImplementation("br.com.colman:kotest-extensions-android:0.1.3")
    testImplementation("io.kotest.extensions:kotest-extensions-koin:1.3.0")

    testImplementation("app.cash.turbine:turbine:1.1.0")

    def mockkVersion = "1.13.12"
    testImplementation "io.mockk:mockk-android:${mockkVersion}"
    testImplementation "io.mockk:mockk-agent:${mockkVersion}"

    // Includes Robolectric
    androidTestImplementation("br.com.colman:kotest-assertions-android:1.1.1")
}